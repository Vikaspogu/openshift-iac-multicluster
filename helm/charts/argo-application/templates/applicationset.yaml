---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ .Values.cluster.type | default "local" }}-clusters-appset
  namespace: openshift-gitops
  labels:
    {{- include "argo-application.labels" . | nindent 4 }}
spec:
  generators:
    {{- if eq .Values.cluster.type "bootstrap" }}
    - matrix:
        generators:
          - clusterDecisionResource:
              configMapRef: acm-placement
              labelSelector:
                matchLabels:
                  cluster.open-cluster-management.io/placement: default-clusterset
              requeueAfterSeconds: 3600
          - git:
              repoURL: {{ .Values.git.url }}
              revision: {{ .Values.git.revision }}
              directories:
                - path: kustomize/argo-bootstrap/*
    {{- else }}
    - git:
        repoURL: {{ .Values.git.url }}
        revision: {{ .Values.git.revision }}
        directories:
          - path: kustomize/cluster-overlays/{{ required "A valid cluster name is required!" .Values.cluster.name }}/*
    - git:
        repoURL: {{ .Values.git.url }}
        revision: {{ .Values.git.revision }}
        directories:
          - path: helm/cluster-overlays/{{ required "A valid cluster name is required!" .Values.cluster.name }}/*
        template:
          metadata: {}
          spec:
            project: "default"
            source:
              repoURL: {{ .Values.git.url }}
              path: helm/charts/{{`{{.path.basename}}`}}
              helm:
                valueFiles:
                  - ../../cluster-overlays/{{ required "A valid cluster name is required!" .Values.cluster.name }}/{{`{{.path.basename}}`}}/values.yaml
            destination:
              server: "https://kubernetes.default.svc"
    {{- end }}
  strategy:
    type: RollingSync
    rollingSync:
      steps:
        - matchExpressions:
            - key: type
              operator: In
              values:
                - operator
                - chart
        - matchExpressions:
            - key: type
              operator: In
              values:
                - config
        - matchExpressions:
            - key: type
              operator: In
              values:
                - app
                - application
        - matchExpressions:
            - key: type
              operator: In
              values:
                - cluster
  goTemplate: true
  template:
    metadata:
      {{- if eq .Values.cluster.type "bootstrap" }}
      name: '{{`bootstrap-{{.path.basename}}`}}'
      {{- else }}
      name: '{{`{{.path.basename}}`}}'
      {{- end }}
      labels:
        type: '{{`{{ .path.basename | splitList "-" | last }}`}}'
    spec:
      destination:
        {{- if eq .Values.cluster.type "bootstrap" }}
        server: "{{.server}}"
        {{- else }}
        server: "https://kubernetes.default.svc"
        {{- end }}
      project: default
      syncPolicy:
        automated: {}
        retry:
          limit: 10
          backoff:
            duration: "120s"
            factor: 5
            maxDuration: "10m0s"
        syncOptions:
          - SkipDryRunOnMissingResource=true
          - Validate=false
          - ApplyOutOfSyncOnly=true
          - RespectIgnoreDifferences=true
      source:
        path: "{{`{{.path.path}}`}}"
        repoURL: {{ .Values.git.url }}
        targetRevision: {{ .Values.git.revision }}
