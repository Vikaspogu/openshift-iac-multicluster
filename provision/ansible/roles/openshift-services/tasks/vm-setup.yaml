---
- name: "Replace line in file examples"
  replace:
    path: /etc/systemd/resolved.conf
    regexp: '^#DNS=$'
    replace: 'DNS=1.1.1.1'

- name: Restart systemd-resolved
  ansible.builtin.service:
    name: "{{item}}"
    state: restarted
    enabled: true
  with_items:
    - systemd-resolved

- name: Set timezone
  community.general.timezone:
    name: "{{ timezone }}"
  when:
    - timezone is defined

- name: Add user to sudoers
  ansible.builtin.copy:
    content: "{{ ansible_user }} ALL=(ALL:ALL) NOPASSWD:ALL"
    dest: "/etc/sudoers.d/{{ ansible_user }}_nopasswd"
    mode: "0440"

- name: Disable IPv6
  sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_set: true
    state: present
  with_items:
    - net.ipv6.conf.all.disable_ipv6
    - net.ipv6.conf.default.disable_ipv6
    - net.ipv6.conf.lo.disable_ipv6

- name: Add additional user SSH public keys
  ansible.posix.authorized_key:
    user: "{{ ansible_user }}"
    key: "{{ item }}"
  with_items:
    - "{{ ssh_authorized_keys }}"
  when:
    - ssh_authorized_keys is defined
    - ssh_authorized_keys is iterable
    - ssh_authorized_keys | length > 0

- name: generate SSH key
  openssh_keypair:
    path: "~/.ssh/id_rsa"
    type: rsa
    size: 4096
    state: present
    force: no

- name: Install packages
  package:
    name:
      - "{{ item }}"
    state: present
  loop: "{{ infra.packages }}"
  register: apt_install_common
  retries: 100
  delay: 60
  until: apt_install_common is success

- name: Start firewalld
  ansible.builtin.service:
    name: "{{item}}"
    state: restarted
    enabled: true
  with_items:
    - firewalld

- name: Open up firewall ports
  firewalld:
    permanent: yes
    immediate: yes
    state: enabled
    port: "{{ item }}"
  loop: "{{ infra.ports }}"
  run_once: true

- name: Open up firewall services
  firewalld:
    permanent: yes
    immediate: yes
    state: enabled
    service: "{{ item }}"
  with_items:
    - tftp
  run_once: true
