- name: Cleanup old auto pxeboot files
  ansible.builtin.file:
    path: /var/lib/tftpboot/pxelinux.cfg/{{ ( '01-' + macstart + mac + item.macend ) | replace(':','-') }}
    state: absent
  loop: "{{ vms_info }}"

- name: Cleanup and create directories
  ansible.builtin.file:
    path: "{{ item[1] }}"
    state: "{{ item[0] }}"
  loop: "{{ ['absent', 'directory'] |product(['/var/www/html/ignition', '/var/www/html/install', '{{ ansible_env.HOME }}/openshift', '{{ ansible_env.HOME }}/scripts'])|list }}"

- name: Cleanup client apps oc, kubctl, openshift-install
  ansible.builtin.file:
    path: /tmp/{{ item }}
    state: absent
  loop: "{{ ocp_client|flatten(levels=1) }}"

- name: Setup Auto pxe boot
  ansible.builtin.template:
    src: pxe/{{ item.ign }}
    dest: /var/lib/tftpboot/pxelinux.cfg/{{ ( '01-' + macstart + mac + item.macend ) | replace(':','-') }}
    force: yes
    mode: "u=rx,g=rx,o=rx"
  loop: "{{ vms_info }}"

- name: Download RHCOS
  ansible.builtin.get_url:
    url: "{{ rhcos_download_url }}/{{ item }}"
    dest: /var/www/html/install/
  loop: "{{ rhcos|flatten(levels=1) }}"

- name: Download OCP installer
  ansible.builtin.get_url:
    url: "{{ client_download_url }}/{{ item }}"
    dest: "/tmp/{{ item }}"
  loop: "{{ ocp_client|flatten(levels=1) }}"

- name: Download Helm
  ansible.builtin.get_url:
    url: "{{ helm_download_url }}"
    dest: /tmp/helm-linux-amd64.tar.gz

- name: Copy template files install-config and prep-ignitions
  ansible.builtin.template:
    src: "{{ item,template_src }}"
    dest: "{{ item.template_dest }}"
    force: yes
    mode: "u=rw,g=r,o=r"
  loop:
    - { template_src: 'install-config.ocp', template_dest: "{{ ansible_env.HOME }}/openshift/install-config.yaml" }
    - { template_src: '11-prep-ignitions.sh', template_dest: "{{ ansible_env.HOME }}/scripts/11-prep-ignitions.sh" }

- name: extract and copy helm
  ansible.builtin.unarchive:
    src: /tmp/helm-linux-amd64.tar.gz
    dest: /usr/local/bin/.
    remote_src: true

- name: extract and copy client apps oc, kubctl, openshift-install
  ansible.builtin.unarchive:
    src: /tmp/{{ item }}
    dest: /usr/local/bin/.
    remote_src: true
  loop: "{{ ocp_client|flatten(levels=1) }}"

- name: Create ignition files
  ansible.builtin.command: "sh {{ ansible_env.HOME }}/scripts/11-prep-ignitions.sh"

- name: Enable and start HTTPD servers
  ansible.builtin.service:
    name: httpd
    enabled: yes
    state: started

- name: "wait for httpd to come up"
  ansible.builtin.uri:
    url: "http://{{ ansible_default_ipv4.address }}:8080/ignition/"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 1

- name: "wait for haproxy to come up"
  ansible.builtin.uri:
    url: "http://{{ ansible_default_ipv4.address  }}:9000"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 1
