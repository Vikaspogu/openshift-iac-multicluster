---
- hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tasks:
    - name: Load encrypted credentials
      community.sops.load_vars:
        file: ../roles/openshift-services/vars/secret.sops.yml
        expressions: ignore

    - name: Get root level directory
      ansible.builtin.shell: "git rev-parse --show-toplevel"
      register: root_dir

    - name: Get kubeadmin password
      ansible.builtin.shell: "cat {{ root_dir.stdout_lines[0] }}/provision/kubeadmin-password"
      register: result_kubeadmin

    - name: oc login to cluster
      ansible.builtin.shell: "oc login https://api.{{clusterID}}.{{domain}}:6443 --username=kubeadmin --password={{result_kubeadmin.stdout_lines[0]}} --insecure-skip-tls-verify"

    - name: Provision bootstrapping argocd operator
      kubernetes.core.k8s:
        definition: "{{ lookup('kubernetes.core.kustomize', dir='../../cluster/bootstrapping/openshift-gitops-operator') }}"

    - name: Wait till the openshift-gitops-server pods is created
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: openshift-gitops
      register: pod_list
      until: pod_list|json_query('resources[*].status.phase')|unique == ["Running"]
      retries: 30
      delay: 60

    - name: Check if secret exists
      ansible.builtin.shell: oc get secret sops-age -n openshift-gitops
      register: result
      ignore_errors: true

    - name: Create sops key secret for decryption
      ansible.builtin.shell: "cat ~/.config/sops/age/keys.txt | oc create secret generic sops-age -n openshift-gitops --from-file=keys.txt=/dev/stdin"
      when: '"not found" in result.stderr'

    - name: Apply argo label to Openshift config namespace
      ansible.builtin.shell: "oc label namespace openshift-config argocd.argoproj.io/managed-by=openshift-gitops --overwrite"

    - name: Update openshift-gitops instance
      kubernetes.core.k8s:
        definition: "{{ lookup('kubernetes.core.kustomize', dir='../../cluster/bootstrapping/openshift-gitops-instance') }}"

    - name: Wait till the openshift-gitops-server pods is created
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: openshift-gitops
      register: pod_list
      until: pod_list|json_query('resources[*].status.phase')|unique == ["Running"]
      retries: 30
      delay: 60
